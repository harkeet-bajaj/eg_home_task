---

- name: Prometheus | Creating prometheus user group
  group: name="{{ prometheus_group }}"
  

- name: Prometheus | Creating prometheus user
  user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    system: yes
    state: present

- name: Prometheus | Create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0775
    recurse: true
  loop:
    - "{{ prometheus_path }}"
    - "{{ prometheus_config }}"
    - "{{ prometheus_data }}"


- name: Prometheus | Install prometheus
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "{{ prometheus_path }}"
    remote_src: true
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    # creates: "{{ prometheus_path }}"

- name: Prometheus | Copy prometheus & Promtool file to usr bin
  copy:
    src: "{{ prometheus_path }}/{{ item }}"
    dest: /usr/local/bin
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    remote_src: yes
    mode: 0755
  with_items:
    - prometheus
    - promtool


- name: Create the Prometheus configuration file
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640

# - name: alert config file
#   copy:
#     src: "{{ role_path }}/files/alertrules.yml"
#     dest: /etc/prometheus/alert.rules.yml

- name: Prometheus | Template copy systemd init file
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: Reload systemd

- name: Prometheus | Starting service
  systemd:
    name: prometheus
    state: started
    enabled: true
    daemon_reload: true

- name: Prometheus | Restart if necessary
  meta: flush_handlers

# - name: Start prometheus service
#   service:
#     name: prometheus
#     state: started
#     enabled: yes

- name: Check if prometheus is accessible
  uri:
    url: http://localhost:9090
    method: GET
    status_code: 200
